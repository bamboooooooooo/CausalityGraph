package main;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class ModelicaProject {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		ArrayList<String> bddPropertyFiles = new ArrayList<String>();
		ArrayList<String> actFiles = new ArrayList<String>();
		bddPropertyFiles.add("C:\\Users\\wen\\Desktop\\XMI\\icBDD.xml");
		/*bddPropertyFiles.add("C:\\Users\\wen\\Desktop\\XMI\\ecBDD.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\EmergencySys.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\SeparationSys.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\MParachuteSys.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\BParachuteSys.xml");*/
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\CalOne.xml");
		/*actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\CalTwo.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\StateMonitorSys.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\OverloadController.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\Radar.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\RemoteSensor.xml");
		actFiles.add("C:\\Users\\wen\\Desktop\\XMI\\Components\\GNC.xml");*/

		/*generateModelicaProject(bddPropertyFiles, "C:\\Users\\wen\\Desktop\\XMI\\SystemComposition.xml",
				"C:\\Users\\wen\\Desktop\\XMI\\SystemContext.xml", actFiles,
				"C:\\Users\\wen\\Desktop\\XMI\\SystemActivity.xml","C:/Users/wen/Desktop/testData.txt");*/
		
		generateModelicaProject(bddPropertyFiles, "",
				"", actFiles,
				"");
	}

	static String generateModelicaProject(ArrayList<String> bddPropertyFiles, String bddCompositionFile,
			String ibdContextFile, ArrayList<String> actFiles, String sysActFile) throws Exception {
		String filePath = "modelicamodels/mo/" + "SysModelicaProject.mo";
		File file = new File(filePath);
		file.createNewFile();
		BufferedWriter writer = new BufferedWriter(new FileWriter(file));

		System.out.println("package System");
		writer.write("package System" + "\r\n");
		/*-----component models-------*/
		for (String actFile : actFiles) {
			String componentFilePath = ComponentModel.transform(actFile, sysActFile, bddPropertyFiles);
			File componentFile = new File(componentFilePath);
			if (componentFile.isFile() && componentFile.exists()) { // 文件存在
				InputStreamReader read = new InputStreamReader(new FileInputStream(componentFile));
				BufferedReader bufferedReader = new BufferedReader(read);
				String lineTxt = null;
				while ((lineTxt = bufferedReader.readLine()) != null) {
					writer.write(lineTxt + "\r\n");
				}
				bufferedReader.close();
				read.close();
			} else {
				System.out.println("文件不存在");
			}

		}
		/*----------parameter model----------*/
		String parFilePath = ParameterModel.generateParameterModel(actFiles, bddPropertyFiles, ibdContextFile);
		File parFile = new File(parFilePath);
		if (parFile.isFile() && parFile.exists()) { // 文件存在
			InputStreamReader read = new InputStreamReader(new FileInputStream(parFile));
			BufferedReader bufferedReader = new BufferedReader(read);
			String lineTxt = null;
			while ((lineTxt = bufferedReader.readLine()) != null) {
				writer.write(lineTxt + "\r\n");
			}
			bufferedReader.close();
			read.close();
		} else {
			System.out.println("文件不存在");
		}
		/*----------system model----------*/
		String sysModelFilePath = SystemModel.generateSystemModel(bddCompositionFile, ibdContextFile, actFiles, sysActFile);
		File sysModelFile = new File(sysModelFilePath);
		if (sysModelFile.isFile() && sysModelFile.exists()) { // 文件存在
			InputStreamReader read = new InputStreamReader(new FileInputStream(sysModelFile));
			BufferedReader bufferedReader = new BufferedReader(read);
			String lineTxt = null;
			while ((lineTxt = bufferedReader.readLine()) != null) {
				writer.write(lineTxt + "\r\n");
			}
			bufferedReader.close();
			read.close();
		} else {
			System.out.println("文件不存在");
		}		
		
		System.out.println("end System;");
		writer.write("end System;" + "\r\n");
		writer.flush();
		writer.close();
		return filePath;
	}
	
}
