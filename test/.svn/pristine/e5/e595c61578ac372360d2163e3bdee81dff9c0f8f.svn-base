package Function;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

public class ExcelWrite {
	private static HSSFWorkbook workbook = null;

	public static boolean fileExist(String fileDir) {
		boolean flag = false;
		File file = new File(fileDir);
		flag = file.exists();
		return flag;
	}

	public static boolean sheetExist(String fileDir, String sheetName) throws Exception {
		boolean flag = false;
		File file = new File(fileDir);
		if (file.exists()) {
			try {
				workbook = new HSSFWorkbook(new FileInputStream(file));
				HSSFSheet sheet = workbook.getSheet(sheetName);
				if (sheet != null)
					flag = true;
			} catch (Exception e) {
				throw e;
			}
		} else {
			flag = false;
		}
		return flag;
	}

	public static void createExcet(String fileDir, String sheetName, String titleRow[]) throws Exception {
		workbook = new HSSFWorkbook();
		HSSFSheet sheet1 = workbook.createSheet(sheetName);
		FileOutputStream out = null;
		try {
			HSSFRow row = workbook.getSheet(sheetName).createRow(0);
			for (short i = 0; i < titleRow.length; i++) {
				HSSFCell cell = row.createCell(i);
				cell.setCellValue(titleRow[i]);
			}
			out = new FileOutputStream(fileDir);
			workbook.write(out);
		} catch (Exception e) {
			throw e;
		} finally {
			try {
				out.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	public static void writeToExcel(String fileDir, String sheetName, List<Map> mapList) throws Exception {
		File file = new File(fileDir);
		try {
			workbook = new HSSFWorkbook(new FileInputStream(file));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		FileOutputStream out = null;
		HSSFSheet sheet = workbook.getSheet(sheetName);
		int columnCount = sheet.getRow(0).getLastCellNum()+1;
		try{
			HSSFRow titleRow = sheet.getRow(0);
			if(titleRow != null){
				for(int rowId=0;rowId<mapList.size();rowId++){
					Map map = mapList.get(rowId);
					HSSFRow newRow = sheet.createRow(rowId+1);
					for(short columnIndex = 0;columnIndex < columnCount;columnIndex++){
						String mapKey = titleRow.getCell(columnIndex).toString().trim().toString().trim();
						HSSFCell cell = newRow.createCell(columnIndex);
						cell.setCellValue(map.get(mapKey)==null?null:map.get(mapKey).toString());
					}
				}
			}
			out = new FileOutputStream(fileDir);
			workbook.write(out);
		}catch(Exception e){
			throw e;
		}finally{
			try{
				out.close();
			}catch(IOException e){
				e.printStackTrace();
			}
		}
	}
}
