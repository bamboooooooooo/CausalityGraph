package main;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class Formater {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		formatTxtFile("StateMonitorSys", "C:\\Users\\wen\\Desktop\\ModelicaModel\\StateMonitorSys.txt"); // MParachuteSys
	}

	/**
	 * format modelica model
	 * @param modelName,filePath         
	 * @return modelica model
	 * @throws IOException
	 */
	public static String formatTxtFile(String modelName, String filePath) throws IOException {
//		File newFile = new File("C:\\Users\\wen\\Desktop\\ModelicaModel\\MM\\" + modelName + ".txt");
		File newFile = new File("modelicamodels/mo/" + modelName + ".mo");
		newFile.createNewFile();
		BufferedWriter writer = new BufferedWriter(new FileWriter(newFile));
		List<String> whenList = new ArrayList<String>();
		try {
			File file = new File(filePath);
			if (file.isFile() && file.exists()) { //文件存在
				InputStreamReader read = new InputStreamReader(new FileInputStream(file));
				BufferedReader bufferedReader = new BufferedReader(read);
				String lineTxt = null;
				int i = 0, j = 0;
				boolean whenClause = false;
				while ((lineTxt = bufferedReader.readLine()) != null) {
					if (lineTxt.contains("if") && !lineTxt.contains("end")) {
						i++;
					} else if (lineTxt.contains("end") && lineTxt.contains("if")) {
						j++;
					} else if (!lineTxt.contains("end") && lineTxt.contains("when") && i != j) {
						whenClause = true;
					} else if (lineTxt.contains("end when") && i != j) {
						whenClause = false;
					}

					// rewrite
					if (whenClause || (lineTxt.contains("end when") && i != j)) {
						whenList.add(lineTxt);
					} else if (lineTxt.contains(modelName)) {
						// rewrite whenClause
						for (String s : whenList) {
							writer.write(s + "\r\n");
						}
						writer.write(lineTxt + "\r\n");
					} else {
						writer.write(lineTxt + "\r\n");
					}
				}
				bufferedReader.close();
				read.close();
			} else {
				System.out.println("文件不存在");
			}
		} catch (Exception e) {
			System.out.println("");
			e.printStackTrace();
		}
		writer.flush();
		writer.close();
		return "modelicamodels/mo/" + modelName + ".mo";
	}
}
