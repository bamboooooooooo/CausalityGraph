package main;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import type.ActivityPartition;
import type.Comment;
import type.Correspondence;
import type.Node;
import type.SequenceOrder;
import type.Transition;
import type.Variable;

public class SlidingWindow {
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
	}

	public static void transformSlidingWindow(BufferedWriter writer, ArrayList<Node> nodes, Boolean preActivity) throws Exception {
		
		    if(preActivity){
		    	System.out.println("when preIsFinish then");
				writer.write("when preIsFinish then" + "\r\n");
				System.out.println("  Time := time;");
				writer.write("  Time := time;" +  "\r\n");
				System.out.println("end when;");
				writer.write("end when;" + "\r\n");
		    }
		
		    Node timerNode = findTimerNode(nodes);
			System.out.println("for i in 1:50 loop");
			writer.write("for i in 1:50 loop" + "\r\n");
			
			int index1 = timerNode.name.indexOf("(");
			int index2 = timerNode.name.indexOf(")");
			String interval = timerNode.name.substring(index1 + 1, index2);
			
			System.out.println("  when time > Time + (i - 1) * " + interval + " and time <= Time + i * " + interval + " then");
			writer.write("  when time > Time + (i - 1) * dt and time <= Time + i * dt then" + "\r\n");
			
			System.out.println("    x[i] := ovSig;");
			writer.write("    x[i] := ovSig;" + "\r\n");
			
			System.out.println("    if x[i] == 1 then");
			writer.write("    if x[i] == 1 then" + "\r\n");
			
			System.out.println("      if first == 0 then");
			writer.write("       if first == 0 then" + "\r\n");
			
			System.out.println("       first := i;");
			writer.write("         first := i;" + "\r\n");
			
			System.out.println("     end if;");
			writer.write("     end if;" + "\r\n");
			
			System.out.println("      n := n + 1;");
			writer.write("      n := n + 1;" + "\r\n");
			
			System.out.println("      last := i;");
			writer.write("      last := i;" + "\r\n");
			
			System.out.println("    end if;");
			writer.write("    end if;" + "\r\n");
			
			System.out.println("    if i - first + 1 >= 5 and n < 3 then");
			writer.write("    if i - first + 1 >= 5 and n < 3 then" + "\r\n");
			
			System.out.println("      first := last;");
			writer.write("      first := last;" + "\r\n");
			
			System.out.println("      n := 1;");
			writer.write("      n := 1;" + "\r\n");
			
			System.out.println("    end if;");
			writer.write("    end if;" + "\r\n");
			
			System.out.println("    if i - first + 1 <= 5 and n >= 3 then");
			writer.write("    if i - first + 1 <= 5 and n >= 3 then" + "\r\n");
			
			System.out.println("      OvSignal := true;");
			writer.write("      OvSignal := true;" + "\r\n");
			
			System.out.println("      isFinish := true;");
			writer.write("      isFinish := true;" + "\r\n");
			
			System.out.println("    end if;");
			writer.write("    end if;" + "\r\n");
			
			System.out.println("  end when;");
			writer.write("  end when;" + "\r\n");
			
			System.out.println("end for;");
			writer.write("end for;" + "\r\n");
		}
	
	public static Node findTimerNode(ArrayList<Node> nodes){
		Node node = new Node(); 
		for(Node n:nodes){
			if(n.type.equals("AcceptEventTimer")){
				node = n;
				break;
			}
		}
		return node;		
	}
}
